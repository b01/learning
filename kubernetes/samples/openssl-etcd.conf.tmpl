[ etcd ]
default_bits       = 2048
default_md         = sha256
distinguished_name = etcd_dn
prompt             = no
x509_extensions    = etcd_ext

[ etcd_dn ]
CN = etcd-ca

[ etcd_ext ]
basicConstraints = critical, CA:TRUE
keyUsage         = critical, digitalSignature, keyEncipherment,cRLSign, keyCertSign
subjectAltName   = @etcd_sans

[ etcd_sans ]
DNS.1 = etcd-ca
DNS.2 = localhost
DNS.3 = control-plane-01
DNS.4 = control-plane
IP.1  = 127.0.0.1
IP.2  = 0:0:0:0:0:0:0:1
IP.3  = ${IPV4}
IP.4  = ${IPV6}

[ healthcheck-client ]
default_bits       = 2048
default_md         = sha256
distinguished_name = healthcheck-client_dn
prompt             = no
x509_extensions    = healthcheck-client_ext

[ healthcheck-client_dn ]
CN = kube-etcd-healthcheck-client

[ healthcheck-client_ext ]
basicConstraints = critical, CA:FALSE
extendedKeyUsage = clientAuth
keyUsage         = critical, digitalSignature, keyEncipherment

[ peer ]
default_bits       = 2048
default_md         = sha256
distinguished_name = peer_dn
prompt             = no
req_extensions     = peer_ext

[ peer_dn ]
CN = control-plane-01

[ peer_ext ]
basicConstraints = critical, CA:FALSE
extendedKeyUsage = serverAuth, clientAuth
keyUsage         = critical, digitalSignature, keyEncipherment
subjectAltName   = @peer_sans

[ peer_sans ]
DNS.1 = localhost
DNS.2 = control-plane-01
DNS.3 = control-plane
IP.1  = 127.0.0.1
IP.2  = 0:0:0:0:0:0:0:1
IP.3  = ${IPV4}
IP.4  = ${IPV6}

[ server ]
default_bits       = 2048
default_md         = sha256
distinguished_name = server_dn
prompt             = no
req_extensions     = server_ext

[ server_dn ]
CN = control-plane-01

[ server_ext ]
basicConstraints = critical, CA:FALSE
extendedKeyUsage = serverAuth, clientAuth
keyUsage         = critical, digitalSignature, keyEncipherment
subjectAltName   = @server_sans

[ server_sans ]
DNS.1 = localhost
DNS.2 = control-plane-01
DNS.3 = control-plane
IP.1  = 127.0.0.1
IP.2  = 0:0:0:0:0:0:0:1
IP.3  = ${IPV4}
IP.4  = ${IPV6}
